{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tady_scool\\\\Kurs\\\\Reppositors\\\\React module\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\Fhonebook\\\\Contacts.jsx\";\nimport React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport css from './fhonebook.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Contacts = _ref => {\n  let {\n    contacts\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.section,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: css.inputName,\n      children: \"Find contacts by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: css.input,\n      type: \"text\",\n      name: \"name\",\n      pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n      title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.contactItem,\n      children: contacts.map(_ref2 => {\n        let {\n          name,\n          number,\n          id\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: css.contactName,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [name, \" : \", number, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["D:/Tady_scool/Kurs/Reppositors/React module/goit-react-hw-02-phonebook/src/components/Fhonebook/Contacts.jsx"],"names":["React","Component","nanoid","css","Contacts","contacts","section","inputName","input","contactItem","map","name","number","id","contactName"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;;AAIA,OAAO,MAAMC,QAAQ,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACxC,sBAEE;AAAK,IAAA,SAAS,EAAEF,GAAG,CAACG,OAApB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAEH,GAAG,CAACI,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACM,MAAA,SAAS,EAAEJ,GAAG,CAACK,KADrB;AAEM,MAAA,IAAI,EAAC,MAFX;AAGM,MAAA,IAAI,EAAC,MAHX;AAIM,MAAA,OAAO,EAAC,wHAJd;AAKM,MAAA,KAAK,EAAC,wIALZ;AAMM,MAAA,QAAQ;AANd;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUE;AAAI,MAAA,SAAS,EAAEL,GAAG,CAACM,WAAnB;AAAA,gBACGJ,QAAQ,CAACK,GAAT,CAAa;AAAA,YAAC;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,MAAR;AAAgBC,UAAAA;AAAhB,SAAD;AAAA,4BACZ;AAAI,UAAA,SAAS,EAAEV,GAAG,CAACW,WAAnB;AAAA,iCACE;AAAA,uBAAIH,IAAJ,SAAaC,MAAb,eAAoB;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAqCC,EAArC;AAAA;AAAA;AAAA;AAAA,gBADY;AAAA,OAAb;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAuBD,CAxBM;KAAMT,Q;AA8Bb,eAAeA,QAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport css from './fhonebook.module.css';\r\n\r\n\r\n\r\nexport const Contacts = ({ contacts }) => {\r\n  return (\r\n    \r\n    <div className={css.section}>\r\n        <h3 className={css.inputName}>Find contacts by name</h3>\r\n        <input\r\n              className={css.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n            />\r\n      <ul className={css.contactItem}>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li className={css.contactName} key={id}>\r\n            <p>{name} : {number}<button type=\"button\">Delete</button></p>\r\n            \r\n          </li>\r\n          \r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default Contacts;\r\n\r\n"]},"metadata":{},"sourceType":"module"}